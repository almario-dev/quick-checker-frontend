name: Main CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: prototype

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Quasar CLI globally
        run: npm install -g @quasar/cli

      - name: Install dependencies
        run: npm install

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # - name: Run tests
      #   run: npm run test

      - name: Build the app
        env:
          VITE_API: ${{ secrets.HOST_URL }}

        run: |
          echo "Building the Quasar app with production environment variables..."
          quasar build

      - name: Upload production-ready files
        uses: actions/upload-artifact@v4
        with:
          name: vue-build
          path: dist/spa/

  deploy:
    environment: prototype
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: vue-build
          path: dist/spa/

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Test SSH Connectivity
        env:
          SSH_USER: ${{ secrets.HOSTING_USER }}
          SSH_HOST: ${{ secrets.HOSTING_HOST }}
          SSH_PORT: ${{ secrets.HOSTING_PORT }}
          SSH_PASS: ${{ secrets.HOSTING_PASSWORD }}
        run: |
          echo "Testing SSH connection..."
          sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST "echo SSH connection successful"

      - name: Deploy build files with rsync using password
        env:
          SSH_USER: ${{ secrets.HOSTING_USER }}
          SSH_HOST: ${{ secrets.HOSTING_HOST }}
          SSH_PORT: ${{ secrets.HOSTING_PORT }}
          SSH_PASS: ${{ secrets.HOSTING_PASSWORD }}
          SSH_PATH: ${{ secrets.HOSTING_PATH }}
        run: |
          echo "Deploying files via rsync..."
          sshpass -p "$SSH_PASS" rsync -avz --delete \
            --exclude='.htaccess' \
            --exclude='releases/' \
            -e "ssh -o StrictHostKeyChecking=no -p $SSH_PORT" \
            dist/spa/ $SSH_USER@$SSH_HOST:$SSH_PATH
